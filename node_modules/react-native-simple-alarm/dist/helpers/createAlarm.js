"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAlarm = void 0;
// libs
var async_storage_1 = __importDefault(require("@react-native-community/async-storage"));
// local
var Alarm_1 = __importDefault(require("./Alarm"));
var uuid_1 = __importDefault(require("./uuid"));
var activateAlarmWithoutEdit_1 = require("./libraryOnlyHelpers/activateAlarmWithoutEdit");
var constants_1 = require("./constants");
var createAlarm = function (_a) { return __awaiter(void 0, void 0, void 0, function () {
    var id, alarm, storage, updatedStorage;
    var _b = _a.active, active = _b === void 0 ? false : _b, _c = _a.date, date = _c === void 0 ? "" : _c, _d = _a.message, message = _d === void 0 ? "Alarm" : _d, _e = _a.snooze, snooze = _e === void 0 ? 0 : _e, _f = _a.userInfo, userInfo = _f === void 0 ? {} : _f, props = __rest(_a, ["active", "date", "message", "snooze", "userInfo"]);
    return __generator(this, function (_g) {
        switch (_g.label) {
            case 0:
                if (!date) {
                    throw new Error("Please enter a date");
                }
                id = (0, uuid_1.default)();
                alarm = new Alarm_1.default(__assign({ id: id, oid: id, active: active, date: date, message: message, snooze: snooze, userInfo: userInfo }, props));
                return [4 /*yield*/, async_storage_1.default.getItem(constants_1.alarmStorage)];
            case 1:
                storage = _g.sent();
                if (!(storage && storage.length > 0)) return [3 /*break*/, 3];
                updatedStorage = JSON.stringify(__spreadArray(__spreadArray([], JSON.parse(storage), true), [alarm], false));
                return [4 /*yield*/, async_storage_1.default.setItem(constants_1.alarmStorage, updatedStorage)];
            case 2:
                _g.sent();
                return [3 /*break*/, 5];
            case 3: return [4 /*yield*/, async_storage_1.default.setItem(constants_1.alarmStorage, JSON.stringify([alarm]))];
            case 4:
                _g.sent();
                _g.label = 5;
            case 5:
                if (!active) return [3 /*break*/, 7];
                return [4 /*yield*/, (0, activateAlarmWithoutEdit_1.activateAlarmWithoutEdit)(alarm.id)];
            case 6:
                _g.sent();
                _g.label = 7;
            case 7: return [2 /*return*/, alarm];
        }
    });
}); };
exports.createAlarm = createAlarm;
exports.default = exports.createAlarm;
