"use strict";
/**
 * Alarm
 * @id {string} int for push notification
 * @active {boolean}
 * @time {string} formatted hh:mm A
 * @date {string} ISO string
 * @message {string} Alarm message
 * @snooze {int}
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Alarm = void 0;
// libs
var react_native_1 = require("react-native");
var emptyProperty = react_native_1.Platform.select({ ios: "", android: undefined });
var Alarm = /** @class */ (function () {
    function Alarm(_a // repeat type is removed on purpose // changing repeat type would effect snooze logic
    ) {
        var _b = _a.id, id = _b === void 0 ? "" : _b, _c = _a.active, active = _c === void 0 ? false : _c, _d = _a.date, date = _d === void 0 ? "" : _d, _e = _a.message, message = _e === void 0 ? "Alarm" : _e, _f = _a.snooze, snooze = _f === void 0 ? 1 : _f, 
        // every property below is from react-native push notification
        // https://github.com/zo0r/react-native-push-notification
        _g = _a.userInfo, 
        // every property below is from react-native push notification
        // https://github.com/zo0r/react-native-push-notification
        userInfo = _g === void 0 ? {} : _g, _h = _a.ticker, ticker = _h === void 0 ? emptyProperty : _h, _j = _a.autoCancel, autoCancel = _j === void 0 ? true : _j, _k = _a.largeIcon, largeIcon = _k === void 0 ? emptyProperty : _k, _l = _a.smallIcon, smallIcon = _l === void 0 ? emptyProperty : _l, _m = _a.bigText, bigText = _m === void 0 ? emptyProperty : _m, _o = _a.subText, subText = _o === void 0 ? emptyProperty : _o, _p = _a.color, color = _p === void 0 ? "white" : _p, _q = _a.vibrate, vibrate = _q === void 0 ? true : _q, _r = _a.vibration, vibration = _r === void 0 ? 1000 : _r, _s = _a.tag, tag = _s === void 0 ? emptyProperty : _s, _t = _a.group, group = _t === void 0 ? emptyProperty : _t, _u = _a.ongoing, ongoing = _u === void 0 ? false : _u, _v = _a.priority, priority = _v === void 0 ? "high" : _v, _w = _a.visibility, visibility = _w === void 0 ? "private" : _w, _x = _a.importance, importance = _x === void 0 ? "high" : _x, _y = _a.allowWhileIdle, allowWhileIdle = _y === void 0 ? false : _y, _z = _a.ignoreInForeground, ignoreInForeground = _z === void 0 ? false : _z, _0 = _a.title, title = _0 === void 0 ? emptyProperty : _0, _1 = _a.playSound, playSound = _1 === void 0 ? true : _1, _2 = _a.soundName, soundName = _2 === void 0 ? emptyProperty : _2, _3 = _a.number, number = _3 === void 0 ? emptyProperty : _3, actions = _a.actions;
        this.id = id;
        this.active = active;
        this.date = date;
        this.message = message;
        this.snooze = snooze;
        this.userInfo = userInfo;
        this.oid = id;
        this.ticker = ticker;
        this.autoCancel = autoCancel;
        this.largeIcon = largeIcon;
        this.smallIcon = smallIcon;
        this.bigText = bigText;
        this.subText = subText;
        this.color = color;
        this.vibrate = vibrate;
        this.vibration = vibration;
        this.tag = tag;
        this.group = group;
        this.ongoing = ongoing;
        this.priority = priority;
        this.visibility = visibility;
        this.importance = importance;
        this.allowWhileIdle = allowWhileIdle;
        this.ignoreInForeground = ignoreInForeground;
        this.title = title;
        this.playSound = playSound;
        this.soundName = soundName;
        this.number = number;
        this.actions = actions;
    }
    return Alarm;
}());
exports.Alarm = Alarm;
exports.default = Alarm;
